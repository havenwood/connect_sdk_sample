=begin
#Square Connect API

OpenAPI spec version: 2.0
Contact: developers@squareup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SquareConnect::V1EmployeesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'V1EmployeesApi' do
  before do
    # run before each test
    @instance = SquareConnect::V1EmployeesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of V1EmployeesApi' do
    it 'should create an instact of V1EmployeesApi' do
      expect(@instance).to be_instance_of(SquareConnect::V1EmployeesApi)
    end
  end

  # unit tests for create_employee
  # Creates an employee for a business.
  # Creates an employee for a business.
  # @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [V1Employee]
  describe 'create_employee test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_employee_role
  # Creates an employee role you can then assign to employees.
  # Creates an employee role you can then assign to employees.
  # @param employee_role An EmployeeRole object with a name and permissions, and an optional owner flag.
  # @param [Hash] opts the optional parameters
  # @return [V1EmployeeRole]
  describe 'create_employee_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_timecard
  # Creates a timecard for an employee. Each timecard corresponds to a single shift.
  # Creates a timecard for an employee. Each timecard corresponds to a single shift.
  # @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [V1Timecard]
  describe 'create_timecard test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_timecard
  # Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.
  # Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.
  # @param timecard_id The ID of the timecard to delete.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_timecard test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_cash_drawer_shifts
  # Provides the details for all of a location&#39;s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.
  # Provides the details for all of a location&#39;s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.
  # @param location_id The ID of the location to list cash drawer shifts for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC
  # @option opts [String] :begin_time The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.
  # @option opts [String] :end_time The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.
  # @return [Array<V1CashDrawerShift>]
  describe 'list_cash_drawer_shifts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_employee_roles
  # Provides summary information for all of a business&#39;s employee roles.
  # Provides summary information for all of a business&#39;s employee roles.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order The order in which employees are listed in the response, based on their created_at field.Default value: ASC 
  # @option opts [Integer] :limit The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
  # @option opts [String] :cursor A pagination cursor to retrieve the next set of results for your original query to the endpoint.
  # @return [Array<V1EmployeeRole>]
  describe 'list_employee_roles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_employees
  # Provides summary information for all of a business&#39;s employees.
  # Provides summary information for all of a business&#39;s employees.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order The order in which employees are listed in the response, based on their created_at field.      Default value: ASC 
  # @option opts [String] :begin_updated_at If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format
  # @option opts [String] :end_updated_at If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :begin_created_at If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :end_created_at If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :status If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).
  # @option opts [String] :external_id If provided, the endpoint returns only employee entities with the specified external_id.
  # @option opts [Integer] :limit The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
  # @return [Array<V1Employee>]
  describe 'list_employees test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_timecard_events
  # Provides summary information for all events associated with a particular timecard.
  # Provides summary information for all events associated with a particular timecard.
  # @param timecard_id The ID of the timecard to list events for.
  # @param [Hash] opts the optional parameters
  # @return [Array<V1TimecardEvent>]
  describe 'list_timecard_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_timecards
  # Provides summary information for all of a business&#39;s employee timecards.
  # Provides summary information for all of a business&#39;s employee timecards.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order The order in which timecards are listed in the response, based on their created_at field.
  # @option opts [String] :employee_id If provided, the endpoint returns only timecards for the employee with the specified ID.
  # @option opts [String] :begin_clockin_time If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :end_clockin_time If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :begin_clockout_time If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :end_clockout_time If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :begin_updated_at If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.
  # @option opts [String] :end_updated_at If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.
  # @option opts [BOOLEAN] :deleted If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don&#39;t provide this parameter, both valid and deleted timecards are returned.
  # @option opts [Integer] :limit The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
  # @option opts [String] :cursor A pagination cursor to retrieve the next set of results for your original query to the endpoint.
  # @return [Array<V1Timecard>]
  describe 'list_timecards test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_cash_drawer_shift
  # Provides the details for a single cash drawer shift, including all events that occurred during the shift.
  # Provides the details for a single cash drawer shift, including all events that occurred during the shift.
  # @param location_id The ID of the location to list cash drawer shifts for.
  # @param shift_id The shift&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [V1CashDrawerShift]
  describe 'retrieve_cash_drawer_shift test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_employee
  # Provides the details for a single employee.
  # Provides the details for a single employee.
  # @param employee_id The employee&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [V1Employee]
  describe 'retrieve_employee test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_employee_role
  # Provides the details for a single employee role.
  # Provides the details for a single employee role.
  # @param role_id The role&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [V1EmployeeRole]
  describe 'retrieve_employee_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_timecard
  # Provides the details for a single timecard.
  # Provides the details for a single timecard.
  # @param timecard_id The timecard&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [V1Timecard]
  describe 'retrieve_timecard test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_employee
  # V1 UpdateEmployee
  # 
  # @param employee_id The ID of the role to modify.
  # @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [V1Employee]
  describe 'update_employee test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_employee_role
  # Modifies the details of an employee role.
  # Modifies the details of an employee role.
  # @param role_id The ID of the role to modify.
  # @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [V1EmployeeRole]
  describe 'update_employee_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_timecard
  # Modifies a timecard&#39;s details. This creates an API_EDIT event for the timecard. You can view a timecard&#39;s event history with the List Timecard Events endpoint.
  # Modifies a timecard&#39;s details. This creates an API_EDIT event for the timecard. You can view a timecard&#39;s event history with the List Timecard Events endpoint.
  # @param timecard_id TThe ID of the timecard to modify.
  # @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [V1Timecard]
  describe 'update_timecard test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
